<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 移动互联专业实践</title><link>https://mi.zjgsu.xyz/post/</link><description>Recent content in Posts on 移动互联专业实践</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>hanjianwei@zjgsu.edu.cn (Jianwei Han)</managingEditor><webMaster>hanjianwei@zjgsu.edu.cn (Jianwei Han)</webMaster><lastBuildDate>Tue, 03 Nov 2020 13:30:00 +0800</lastBuildDate><atom:link href="https://mi.zjgsu.xyz/post/index.xml" rel="self" type="application/rss+xml"/><item><title>系统部署</title><link>https://mi.zjgsu.xyz/2020/11/03/deployment/</link><pubDate>Tue, 03 Nov 2020 13:30:00 +0800</pubDate><author>hanjianwei@zjgsu.edu.cn (Jianwei Han)</author><guid>https://mi.zjgsu.xyz/2020/11/03/deployment/</guid><description>在移动互联网应用中，服务端通常需要部署到大量不同软硬件配置的机器上，同时系统本身也有这大量的外部依赖，这使得部署的复杂度日渐提高。 配置管理 配</description></item><item><title>传感器</title><link>https://mi.zjgsu.xyz/2020/10/27/sensors/</link><pubDate>Tue, 27 Oct 2020 18:30:00 +0800</pubDate><author>hanjianwei@zjgsu.edu.cn (Jianwei Han)</author><guid>https://mi.zjgsu.xyz/2020/10/27/sensors/</guid><description>移动设备和PC相比，具有丰富的传感器可以用，在开发过程中适当地应用这些传感器可以使得你的App功能更加丰富、使用起来更方便。 常用传感器 And</description></item><item><title>Android架构</title><link>https://mi.zjgsu.xyz/2020/10/27/android-architecture/</link><pubDate>Tue, 27 Oct 2020 13:40:00 +0800</pubDate><author>hanjianwei@zjgsu.edu.cn (Jianwei Han)</author><guid>https://mi.zjgsu.xyz/2020/10/27/android-architecture/</guid><description>Android框架具有相当大的自由度，我们可以根据不同的方式来组合和构建代码。但是这种自由度也可能导致代码的极度混乱，从而使得测试、维护和扩</description></item><item><title>Android第三方库</title><link>https://mi.zjgsu.xyz/2020/10/20/android-thirdparty/</link><pubDate>Tue, 20 Oct 2020 18:30:00 +0800</pubDate><author>hanjianwei@zjgsu.edu.cn (Jianwei Han)</author><guid>https://mi.zjgsu.xyz/2020/10/20/android-thirdparty/</guid><description>在进行Android开发时（iOS也是类似），通常要用到第三方库。这些第三方库既包含一般的库，也包含第三方的UI库。在选择库的时候，尽量选择</description></item><item><title>UI/UX设计</title><link>https://mi.zjgsu.xyz/2020/10/20/ui-ux/</link><pubDate>Tue, 20 Oct 2020 13:40:00 +0800</pubDate><author>hanjianwei@zjgsu.edu.cn (Jianwei Han)</author><guid>https://mi.zjgsu.xyz/2020/10/20/ui-ux/</guid><description>UI/UX设计不只是设计网站或者App的界面，还要分析用户的需求以及已有的系统，对交互方式、布局、界面等各个部分进行设计。对于初学者，可以从</description></item><item><title>软件测试</title><link>https://mi.zjgsu.xyz/2020/10/13/test/</link><pubDate>Tue, 13 Oct 2020 18:30:00 +0800</pubDate><author>hanjianwei@zjgsu.edu.cn (Jianwei Han)</author><guid>https://mi.zjgsu.xyz/2020/10/13/test/</guid><description>软件测试是现代软件开发中非常重要的一个环节，是保证软件质量的重要手段。软件测试所包含的内容很多，由于课时所限，我们只涉及和开发相关的部分内容</description></item><item><title>Web技术</title><link>https://mi.zjgsu.xyz/2020/10/13/web/</link><pubDate>Tue, 13 Oct 2020 09:50:00 +0800</pubDate><author>hanjianwei@zjgsu.edu.cn (Jianwei Han)</author><guid>https://mi.zjgsu.xyz/2020/10/13/web/</guid><description>对于前端而言，Web 是真正的跨平台技术，它能够运行在所有的主流平台，所以也是前端界面的重要选项。 HTML、CSS 和 JavaScript是 Web 技</description></item><item><title>RESTful API</title><link>https://mi.zjgsu.xyz/2020/09/29/restful-api/</link><pubDate>Tue, 29 Sep 2020 18:30:00 +0800</pubDate><author>hanjianwei@zjgsu.edu.cn (Jianwei Han)</author><guid>https://mi.zjgsu.xyz/2020/09/29/restful-api/</guid><description>RESTful架构 REST(Representational State Transfer)最初是由Roy Thomas Fielding提出的，对RESTful架构的解释可以参考阮一峰的这篇博客。 在设计R</description></item><item><title>数据库</title><link>https://mi.zjgsu.xyz/2020/09/29/database/</link><pubDate>Tue, 29 Sep 2020 08:00:00 +0800</pubDate><author>hanjianwei@zjgsu.edu.cn (Jianwei Han)</author><guid>https://mi.zjgsu.xyz/2020/09/29/database/</guid><description>关于数据库的选择可以参见上节课的内容。这里主要讲关系数据库的设计及编程实现。 ER模型 ER模型即实体关系模型，是数据库系统设计的常用工具。系统</description></item><item><title>软件架构</title><link>https://mi.zjgsu.xyz/2020/09/22/software-architecture/</link><pubDate>Tue, 22 Sep 2020 18:30:00 +0800</pubDate><author>hanjianwei@zjgsu.edu.cn (Jianwei Han)</author><guid>https://mi.zjgsu.xyz/2020/09/22/software-architecture/</guid><description>RESTful架构 移动互联网和传统的网站开发相比，其客户端更加复杂多样，有可能是网页、手机以及各种其它设备，因此通常会采用服务端和前端分离的</description></item><item><title>版本控制与文档</title><link>https://mi.zjgsu.xyz/2020/09/22/git-and-markdown/</link><pubDate>Tue, 22 Sep 2020 08:00:00 +0800</pubDate><author>hanjianwei@zjgsu.edu.cn (Jianwei Han)</author><guid>https://mi.zjgsu.xyz/2020/09/22/git-and-markdown/</guid><description>git 在软件开发过程中，版本控制具有至关重要的作用。它可以实现代码、文档历史版本的保存，并能够还原任何一次历史变更，无论对个人开发还是团队协作都</description></item></channel></rss>